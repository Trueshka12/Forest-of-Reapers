LOG_CHANNEL_ID = 1376859187794939974  # –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã–π ID –ª–æ–≥-–∫–∞–Ω–∞–ª–∞

import discord.ui as ui
import random
import discord
from discord.ext import commands

bot1 = commands.Bot(command_prefix='!', intents=discord.Intents.all())
bot2 = commands.Bot(command_prefix='?', intents=discord.Intents.all())


import asyncio
from datetime import datetime, timedelta
from collections import defaultdict
import time
TIMEOUT_DURATION = 1800  # 30 –º–∏–Ω—É—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
import logging

logger = logging.getLogger("discord")
logger.setLevel(logging.INFO)
handler = logging.StreamHandler()
handler.setFormatter(logging.Formatter("%(asctime)s:%(levelname)s:%(name)s: %(message)s"))
logger.addHandler(handler)


# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è

verification_codes = {}  # –ø–µ—Ä–µ–º–µ—â–µ–Ω–æ
MENU_CHANNEL_ID = 1376868344850026516 # ‚Üê –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –Ω–∞—Å—Ç–æ—è—â–∏–π ID –∫–∞–Ω–∞–ª–∞

class VerificationModal(discord.ui.Modal, title="–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è"):
    def __init__(self):
        super().__init__()
        self.code_input = discord.ui.TextInput(
            label="–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ",
            placeholder="–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ, —É–∫–∞–∑–∞–Ω–Ω–æ–µ –Ω–∞ –∫–Ω–æ–ø–∫–µ",
            required=True,
            max_length=4
        )
        self.add_item(self.code_input)

    async def on_submit(self, interaction: discord.Interaction):
        user_id = interaction.user.id
        entered_code = self.code_input.value

        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–æ–¥ –∏–∑ —Å–ª–æ–≤–∞—Ä—è
        expected_code = verification_codes.get(user_id)

        if not expected_code:
            await interaction.response.send_message("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –∫–æ–¥ –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.", ephemeral=True)
            return

        if entered_code == str(expected_code):
            # –í—ã–¥–∞—á–∞ —Ä–æ–ª–∏ –ø–æ—Å–ª–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
            role_verified = discord.utils.get(interaction.guild.roles, name="User")
            role_unverified = discord.utils.get(interaction.guild.roles, name="unverify")
            if role_verified:
                await interaction.user.add_roles(role_verified)
                if role_unverified:
                    await interaction.user.remove_roles(role_unverified)
                await interaction.response.send_message("‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω—ã!", ephemeral=True)
            else:
                await interaction.response.send_message("‚ö†Ô∏è –†–æ–ª—å 'User' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", ephemeral=True)
        else:
            await interaction.response.send_message("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.", ephemeral=True)
class ApplicationModal(discord.ui.Modal):
    def __init__(self, composition: str):
        super().__init__(title=f"–ó–∞—è–≤–∫–∞ –≤ {composition}")
        self.composition = composition

    age = discord.ui.TextInput(
        label="–°–∫–æ–ª—å–∫–æ –í–∞–º –õ–µ—Ç?",
        placeholder="–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç...",
        required=True,
        max_length=3
    )
    
    clans_experience = discord.ui.TextInput(
        label="–í –ö–∞–∫–∏—Ö –ö–ª–∞–Ω–∞—Ö –í—ã –£–∂–µ –ë—ã–ª–∏?",
        placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–≤–æ—ë–º –æ–ø—ã—Ç–µ –≤ –∫–ª–∞–Ω–∞—Ö...",
        style=discord.TextStyle.paragraph,
        required=True,
        max_length=4000
    )
    
    skills = discord.ui.TextInput(
        label="–ß—Ç–æ –í—ã –£–º–µ–µ—Ç–µ?",
        placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–∏—Ö –Ω–∞–≤—ã–∫–∞—Ö –∏ —É–º–µ–Ω–∏—è—Ö...",
        style=discord.TextStyle.paragraph,
        required=True,
        max_length=4000
    )
    
    time_dedication = discord.ui.TextInput(
        label="–°–∫–æ–ª—å–∫–æ –ì–æ—Ç–æ–≤—ã –£–¥–µ–ª—è—Ç—å –í—Ä–µ–º–µ–Ω–∏ –ö–ª–∞–Ω—É?",
        placeholder="–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –≤ –¥–µ–Ω—å/–Ω–µ–¥–µ–ª—é –≥–æ—Ç–æ–≤—ã —É–¥–µ–ª—è—Ç—å –∫–ª–∞–Ω—É...",
        style=discord.TextStyle.paragraph,
        required=True,
        max_length=4000
    )

    async def on_submit(self, interaction: discord.Interaction):
        try:
            user_id = interaction.user.id
            now = datetime.utcnow()

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—É–ª–¥–∞—É–Ω–∞
            if user_id in last_application_times:
                delta = now - last_application_times[user_id]
                if delta < APPLICATION_COOLDOWN:
                    remaining = APPLICATION_COOLDOWN - delta
                    minutes = int(remaining.total_seconds() // 60)
                    seconds = int(remaining.total_seconds() % 60)
                    return await interaction.response.send_message(
                        f"‚è≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ **{minutes}–º {seconds}—Å** –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–∏.",
                        ephemeral=True
                    )

            last_application_times[user_id] = now

            # –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏ –≤ –∫–∞–Ω–∞–ª
            channel = bot1.get_channel(APPLICATION_CHANNEL_ID)
            if not channel:
                await interaction.response.send_message("‚ùå –ö–∞–Ω–∞–ª –¥–ª—è –∑–∞—è–≤–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω.", ephemeral=True)
                return

            embed = discord.Embed(
                title="üì® –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –≤ –∫–ª–∞–Ω",
                description=f"**–°–æ—Å—Ç–∞–≤:** {self.composition}",
                color=discord.Color.blue()
            )
            embed.add_field(name="üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", value=f"{interaction.user.mention}\n`{interaction.user}`", inline=True)
            embed.add_field(name="üéÇ –í–æ–∑—Ä–∞—Å—Ç", value=f"`{self.age.value}`", inline=True)
            embed.add_field(name="‚è∞ –í—Ä–µ–º—è –¥–ª—è –∫–ª–∞–Ω–∞", value=f"```{self.time_dedication.value[:500]}```", inline=True)
            embed.add_field(name="üèõÔ∏è –û–ø—ã—Ç –≤ –∫–ª–∞–Ω–∞—Ö", value=f"```{self.clans_experience.value[:800]}```", inline=False)
            embed.add_field(name="üõ†Ô∏è –ù–∞–≤—ã–∫–∏ –∏ —É–º–µ–Ω–∏—è", value=f"```{self.skills.value[:800]}```", inline=False)
            
            embed.set_thumbnail(url=interaction.user.display_avatar.url)
            embed.set_footer(text=f"ID: {interaction.user.id} ‚Ä¢ {now.strftime('%d.%m.%Y %H:%M')}")

            await channel.send(embed=embed, view=ModActionView(interaction.user, self.composition))

            # –õ–° –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            try:
                user_embed = discord.Embed(
                    title="‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!",
                    description=f"–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ **{self.composition}** —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º.",
                    color=discord.Color.green()
                )
                user_embed.add_field(name="üìã –ß—Ç–æ –¥–∞–ª—å—à–µ?", 
                                   value="‚Ä¢ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã —Ä–∞—Å—Å–º–æ—Ç—Ä—è—Ç –∑–∞—è–≤–∫—É\n‚Ä¢ –í–∞–º –ø—Ä–∏–¥—ë—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–µ—à–µ–Ω–∏–∏\n‚Ä¢ –ü—Ä–∏ –ø—Ä–∏–Ω—è—Ç–∏–∏ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —Ä–æ–ª—å", 
                                   inline=False)
                await interaction.user.send(embed=user_embed)
            except Exception as e:
                logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –õ–°: {e}")

            await interaction.response.send_message(
                f"‚úÖ –ó–∞—è–≤–∫–∞ –Ω–∞ **{self.composition}** –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –õ–° –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.",
                ephemeral=True
            )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏: {e}")
            await interaction.response.send_message("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", ephemeral=True)

    async def on_error(self, interaction: discord.Interaction, error: Exception):
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ: {error}")

# –ö–Ω–æ–ø–∫–∏ –ü—Ä–∏–Ω—è—Ç—å/–û—Ç–∫–ª–æ–Ω–∏—Ç—å (–¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤)
class ModActionView(discord.ui.View):
    def __init__(self, applicant: discord.Member, composition: str):
        super().__init__(timeout=None)
        self.applicant = applicant
        self.composition = composition

    @discord.ui.button(label="‚úÖ –ü—Ä–∏–Ω—è—Ç—å", style=discord.ButtonStyle.success, custom_id="mod_accept")
    async def accept_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        try:
            # –û–±–Ω–æ–≤–ª—è–µ–º embed —Å —Ä–µ—à–µ–Ω–∏–µ–º
            embed = interaction.message.embeds[0]
            embed.color = discord.Color.green()
            embed.title = "‚úÖ –ó–ê–Ø–í–ö–ê –ü–†–ò–ù–Ø–¢–ê"
            embed.add_field(name="üë®‚Äçüíº –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=f"{interaction.user.mention}", inline=True)
            embed.add_field(name="üìÖ –í—Ä–µ–º—è —Ä–µ—à–µ–Ω–∏—è", value=f"<t:{int(datetime.utcnow().timestamp())}:R>", inline=True)
            
            await interaction.response.edit_message(embed=embed, view=None)
            
            try:
                accept_embed = discord.Embed(
                    title="üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞!",
                    description=f"–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ **{self.composition}** –±—ã–ª–∞ **–ø—Ä–∏–Ω—è—Ç–∞**!",
                    color=discord.Color.green()
                )
                accept_embed.add_field(name="üéØ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏", 
                                      value="‚Ä¢ –í–∞–º –≤—ã–¥–∞–Ω–∞ —Ä–æ–ª—å —É—á–∞—Å—Ç–Ω–∏–∫–∞\n‚Ä¢ –û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∫–ª–∞–Ω–∞\n‚Ä¢ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–æ–º–∞–Ω–¥—É!", 
                                      inline=False)
                await self.applicant.send(embed=accept_embed)
            except Exception as e:
                logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –õ–° –ø—Ä–∏ –ø—Ä–∏–Ω—è—Ç–∏–∏: {e}")
                await interaction.followup.send("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –õ–° –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.", ephemeral=True)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–Ω—è—Ç–∏–∏ –∑–∞—è–≤–∫–∏: {e}")

    @discord.ui.button(label="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", style=discord.ButtonStyle.danger, custom_id="mod_reject")
    async def reject_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.send_modal(RejectModal(self.applicant, self.composition, interaction.message))

    @discord.ui.button(label="‚ùì –ó–∞–ø—Ä–æ—Å–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é", style=discord.ButtonStyle.secondary, custom_id="mod_info")
    async def info_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.send_modal(InfoRequestModal(self.applicant))

# –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –ø—Ä–∏—á–∏–Ω—ã –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è
class RejectModal(discord.ui.Modal):
    def __init__(self, applicant: discord.Member, composition: str, message):
        super().__init__(title="–ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è")
        self.applicant = applicant
        self.composition = composition
        self.message = message

    reason = discord.ui.TextInput(
        label="–ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è",
        placeholder="–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∑–∞—è–≤–∫–∏...",
        style=discord.TextStyle.paragraph,
        required=True,
        max_length=500
    )

    async def on_submit(self, interaction: discord.Interaction):
        try:
            # –û–±–Ω–æ–≤–ª—è–µ–º embed
            embed = self.message.embeds[0]
            embed.color = discord.Color.red()
            embed.title = "‚ùå –ó–ê–Ø–í–ö–ê –û–¢–ö–õ–û–ù–ï–ù–ê"
            embed.add_field(name="üë®‚Äçüíº –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=f"{interaction.user.mention}", inline=True)
            embed.add_field(name="üìÖ –í—Ä–µ–º—è —Ä–µ—à–µ–Ω–∏—è", value=f"<t:{int(datetime.utcnow().timestamp())}:R>", inline=True)
            embed.add_field(name="üìù –ü—Ä–∏—á–∏–Ω–∞", value=f"```{self.reason.value}```", inline=False)
            
            await interaction.response.edit_message(embed=embed, view=None)
            
            try:
                reject_embed = discord.Embed(
                    title="üòû –ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞",
                    description=f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ **{self.composition}** –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.",
                    color=discord.Color.red()
                )
                reject_embed.add_field(name="üìù –ü—Ä–∏—á–∏–Ω–∞", value=f"```{self.reason.value}```", inline=False)
                reject_embed.add_field(name="üîÑ –ß—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ?", 
                                     value="‚Ä¢ –£—á—Ç–∏—Ç–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –∑–∞–º–µ—á–∞–Ω–∏—è\n‚Ä¢ –ú–æ–∂–µ—Ç–µ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –ø–æ–≤—Ç–æ—Ä–Ω–æ —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç\n‚Ä¢ –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º –∑–∞ —Å–æ–≤–µ—Ç–æ–º", 
                                     inline=False)
                await self.applicant.send(embed=reject_embed)
            except Exception as e:
                logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –õ–° –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏: {e}")
                await interaction.followup.send("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –õ–° –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.", ephemeral=True)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏: {e}")

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤
pending_questions = {}

# –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
class InfoRequestModal(discord.ui.Modal):
    def __init__(self, applicant: discord.Member):
        super().__init__(title="–ó–∞–ø—Ä–æ—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")
        self.applicant = applicant

    question = discord.ui.TextInput(
        label="–í–æ–ø—Ä–æ—Å –∫ –∑–∞—è–≤–∏—Ç–µ–ª—é",
        placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –∑–∞–ø—Ä–æ—Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏...",
        style=discord.TextStyle.paragraph,
        required=True,
        max_length=500
    )

    async def on_submit(self, interaction: discord.Interaction):
        try:
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è –≤–æ–ø—Ä–æ—Å–∞
            question_id = f"{self.applicant.id}_{int(datetime.utcnow().timestamp())}"
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–æ–ø—Ä–æ—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            pending_questions[question_id] = {
                "applicant": self.applicant,
                "moderator": interaction.user,
                "question": self.question.value,
                "timestamp": datetime.utcnow(),
                "guild": interaction.guild
            }
            
            info_embed = discord.Embed(
                title="‚ùì –ó–∞–ø—Ä–æ—Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏",
                description="–ü–æ –≤–∞—à–µ–π –∑–∞—è–≤–∫–µ –Ω—É–∂–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:",
                color=discord.Color.orange()
            )
            info_embed.add_field(name="üìù –í–æ–ø—Ä–æ—Å –æ—Ç –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞", value=f"```{self.question.value}```", inline=False)
            info_embed.add_field(name="üí¨ –ö–∞–∫ –æ—Ç–≤–µ—Ç–∏—Ç—å?", 
                               value=f"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É: `!–æ—Ç–≤–µ—Ç {question_id} –≤–∞—à –æ—Ç–≤–µ—Ç`\n"
                                     f"–ù–∞–ø—Ä–∏–º–µ—Ä: `!–æ—Ç–≤–µ—Ç {question_id} –Ø –ª—é–±–ª—é –ø–∏—Ç—å –ø–∏–≤–∞—Å–∏–∫`", 
                               inline=False)
            info_embed.add_field(name="üÜî ID –≤–æ–ø—Ä–æ—Å–∞", value=f"`{question_id}`", inline=True)
            info_embed.set_footer(text="–°–∫–æ–ø–∏—Ä—É–π—Ç–µ ID –≤–æ–ø—Ä–æ—Å–∞ —Ç–æ—á–Ω–æ –∫–∞–∫ –ø–æ–∫–∞–∑–∞–Ω–æ –≤—ã—à–µ")
            
            await self.applicant.send(embed=info_embed)
            await interaction.response.send_message(f"‚úÖ –ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {self.applicant.mention}\nID –≤–æ–ø—Ä–æ—Å–∞: `{question_id}`", ephemeral=True)
            
            # –õ–æ–≥–∏—Ä—É–µ–º –≤ –∫–∞–Ω–∞–ª –º–æ–¥–µ—Ä–∞—Ü–∏–∏
            try:
                channel = bot1.get_channel(APPLICATION_CHANNEL_ID)
                if channel:
                    log_embed = discord.Embed(
                        title="üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –∑–∞–ø—Ä–æ—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏",
                        color=discord.Color.blue()
                    )
                    log_embed.add_field(name="üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", value=f"{self.applicant.mention}", inline=True)
                    log_embed.add_field(name="üë®‚Äçüíº –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=f"{interaction.user.mention}", inline=True)
                    log_embed.add_field(name="üÜî ID", value=f"`{question_id}`", inline=True)
                    log_embed.add_field(name="‚ùì –í–æ–ø—Ä–æ—Å", value=f"```{self.question.value}```", inline=False)
                    await channel.send(embed=log_embed)
            except Exception as log_e:
                logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å: {log_e}")
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {e}")
            await interaction.response.send_message("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.", ephemeral=True)

# –ú–µ–Ω—é –∑–∞—è–≤–æ–∫ (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±–∏—Ä–∞–µ—Ç —Å–æ—Å—Ç–∞–≤)
class ApplicationView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

    @discord.ui.button(label="I –°–æ—Å—Ç–∞–≤", style=discord.ButtonStyle.primary, emoji="üèÜ", custom_id="app_i_composition")
    async def i_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.send_modal(ApplicationModal("I ‚Äî –õ–∏–¥–∏—Ä—É—é—â–∏–π –ø–æ —Å–∏–ª–µ —Å–æ—Å—Ç–∞–≤"))

    @discord.ui.button(label="II –°–æ—Å—Ç–∞–≤", style=discord.ButtonStyle.primary, emoji="‚öîÔ∏è", custom_id="app_ii_composition")
    async def ii_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.send_modal(ApplicationModal("II ‚Äî –í—Ç–æ—Ä–æ–π —Å–æ—Å—Ç–∞–≤ –ø–æ —Å–∏–ª–µ"))

    @discord.ui.button(label="III –°–æ—Å—Ç–∞–≤", style=discord.ButtonStyle.primary, emoji="üõ°Ô∏è", custom_id="app_iii_composition")
    async def iii_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.send_modal(ApplicationModal("III ‚Äî –¢—Ä–µ—Ç–∏–π —Å–æ—Å—Ç–∞–≤"))

    @discord.ui.button(label="IV –°–æ—Å—Ç–∞–≤", style=discord.ButtonStyle.primary, emoji="üíª", custom_id="app_iv_composition")
    async def iv_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.send_modal(ApplicationModal("IV ‚Äî –ö–æ–¥–µ—Ä—ã, –ø–µ–Ω—Ç–µ—Å—Ç, –¥–∏–∑–∞–π–Ω–µ—Ä—ã"))

    @discord.ui.button(label="Family", style=discord.ButtonStyle.secondary, emoji="üè†", custom_id="app_family_composition")
    async def family_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.send_modal(ApplicationModal("Family ‚Äî –ú–∏—Ä–Ω—ã–µ"))


# === –ê–ù–¢–ò-–°–ü–ê–ú –ù–ê–°–¢–†–û–ô–ö–ò ===
MENTION_LIMIT = 5  # –õ–∏–º–∏—Ç —É–ø–æ–º–∏–Ω–∞–Ω–∏–π –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
SPAM_THRESHOLD = 5  # –ö–æ–ª-–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª
SPAM_INTERVAL = 10  # –ò–Ω—Ç–µ—Ä–≤–∞–ª –≤ —Å–µ–∫—É–Ω–¥–∞—Ö

from collections import defaultdict
user_message_log = defaultdict(list)

# === –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è apply_strike ===
async def apply_strike(user, reason, guild):
    pass  # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Ä–µ–∞–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É —Å—Ç—Ä–∞–π–∫–æ–≤


@bot1.event
async def on_ready():
    logger.info(f"‚úÖ –ë–æ—Ç –∑–∞—è–≤–æ–∫ –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ {bot1.user}")
    print(f"‚úÖ –ë–æ—Ç –∑–∞—è–≤–æ–∫ –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ {bot1.user}")
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω—ã–µ View
    bot1.add_view(ApplicationView())
    
    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–µ–º –º–µ–Ω—é –≤ –∫–∞–Ω–∞–ª–µ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    try:
        channel = bot1.get_channel(MENU_CHANNEL_ID)
        if channel:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –º–µ–Ω—é (–∏—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞)
            async for message in channel.history(limit=50):
                if message.author == bot1.user and message.embeds:
                    embed = message.embeds[0]
                    if "–ó–∞—è–≤–∫–∏ –≤ –∫–ª–∞–Ω Forest of Reapers" in embed.title:
                        logger.info("üìã –ú–µ–Ω—é –∑–∞—è–≤–æ–∫ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                        return
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –º–µ–Ω—é
            embed = discord.Embed(
                title="üìã –ó–∞—è–≤–∫–∏ –≤ –∫–ª–∞–Ω Forest of Reapers",
                description="""**–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!** üåü

–ó–∞—è–≤–∫–∏ –≤ –∫–ª–∞–Ω **Forest of Reapers** –æ—Ç–∫—Ä—ã—Ç—ã!

**üéØ –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Å–æ—Å—Ç–∞–≤:**

üèÜ **I –°–æ—Å—Ç–∞–≤** ‚Äî –õ–∏–¥–∏—Ä—É—é—â–∏–π –ø–æ —Å–∏–ª–µ —Å–æ—Å—Ç–∞–≤
–°–∞–º—ã–π —Å–∏–ª—å–Ω—ã–π —Å–æ—Å—Ç–∞–≤ –∫–ª–∞–Ω–∞ , —Å–æ–±—Ä–∞–Ω–Ω—ã–π –∏–∑ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ —Å–≤–æ–µ–≥–æ –¥–µ–ª–∞.
–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Å–∏–ª—ë–Ω –∏ –æ–ø—ã—Ç–µ–Ω
‚öîÔ∏è **II –°–æ—Å—Ç–∞–≤** ‚Äî  –í—Ç–æ—Ä–æ–π —Å–æ—Å—Ç–∞–≤ –ø–æ —Å–∏–ª–µ
–ú–µ–Ω–µ–µ –æ–ø—ã—Ç–Ω—ã —á–µ–º –ø–µ—Ä–≤—ã–π —Å–æ—Å—Ç–∞–≤, –Ω–æ —Ç–∞–∫-–∂–µ —è–≤–ª—è–µ—Ç—Å—è –æ—á–µ–Ω—å —Å–∏–ª—å–Ω—ã–º —Å–æ—Å—Ç–∞–≤–æ–º —Å–æ–±—Ä–∞–Ω–Ω—ã–º –∏–∑ –ª—é–¥–µ–π –∫–æ—Ç–æ—Ä—ã–µ –≥–æ—Ç–æ–≤—ã —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –∏ –∏–¥—Ç–∏ –¥–∞–ª—å—à–µ –∫ —Ü–µ–ª–∏.  
üõ°Ô∏è **III –°–æ—Å—Ç–∞–≤** ‚Äî –≠—Ç–æ—Ç —Å–æ—Å—Ç–∞–≤ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω –∏–∑ –ª—é–¥–µ–π –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç—è—Ç —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –≤ —Å–≤–æ–µ–π —Å—Ñ–µ—Ä–µ —á—Ç–æ-–±—ã —Å—Ç–∞—Ç—å —Å–∏–ª—å–Ω–µ–µ, –≤—ã—à–µ, –ª—É—á—à–µ –∏ –æ–ø—ã—Ç–Ω–µ–µ!
üíª **IV –°–æ—Å—Ç–∞–≤** ‚Äî –ö–æ–¥–µ—Ä—ã, –ø–µ–Ω—Ç–µ—Å—Ç, –¥–∏–∑–∞–π–Ω–µ—Ä—ã –∏ —Ç–¥.
–¢—É—Ç –Ω–∞—Ö–æ–¥—è—Ç—Å—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã , –ø–µ–Ω—Ç–µ—Å—Ç–µ—Ä—ã , –ª—é–¥–∏ –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–Ω–∏–º–∞—é—Ç—Å—è DDoS-–∞—Ç–∞–∫–∞–º–∏ , –¥–∏–∑–∞–π–Ω–µ—Ä—ã –∏ –ª—é–¥–∏ –≤ –ø–æ–¥–æ–±–Ω—ã—Ö —Ç–æ–º—É –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è—Ö.
üè† **Family** ‚Äî –ú–∏—Ä–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏

**üìù –ü—Ä–æ—Ü–µ—Å—Å –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏:**
1. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω—É–∂–Ω–æ–≥–æ —Å–æ—Å—Ç–∞–≤–∞
2. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å–µ–±–µ
3. –î–æ–∂–¥–∏—Ç–µ—Å—å —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º–∏
4. –ü–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–µ—à–µ–Ω–∏–∏ –≤ –õ–°

_–£–¥–∞—á–∏ –≤ –ø–æ–¥–∞—á–µ –∑–∞—è–≤–∫–∏!_ ‚ú®
""",
                color=discord.Color.blue()
            )
            embed.set_footer(text="Forest of Reapers ‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –∑–∞—è–≤–æ–∫")
            await channel.send(embed=embed, view=ApplicationView())
            logger.info("üìã –ú–µ–Ω—é –∑–∞—è–≤–æ–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–æ")
        else:
            logger.warning(f"‚ùå –ö–∞–Ω–∞–ª –º–µ–Ω—é –Ω–µ –Ω–∞–π–¥–µ–Ω: {MENU_CHANNEL_ID}")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–µ–Ω—é: {e}")

@bot1.command()
@commands.has_permissions(administrator=True)
async def setup_menu(ctx):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–µ–Ω—é –∑–∞—è–≤–æ–∫ –≤ —Ç–µ–∫—É—â–µ–º –∫–∞–Ω–∞–ª–µ"""
    embed = discord.Embed(
        title="üìã –ó–∞—è–≤–∫–∏ –≤ –∫–ª–∞–Ω Forest of Reapers",
        description="""**–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!** üåü

–ó–∞—è–≤–∫–∏ –≤ –∫–ª–∞–Ω **Forest of Reapers** –æ—Ç–∫—Ä—ã—Ç—ã!

**üéØ –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Å–æ—Å—Ç–∞–≤:**

üèÜ **I –°–æ—Å—Ç–∞–≤** ‚Äî –õ–∏–¥–∏—Ä—É—é—â–∏–π –ø–æ —Å–∏–ª–µ —Å–æ—Å—Ç–∞–≤
–°–∞–º—ã–π —Å–∏–ª—å–Ω—ã–π —Å–æ—Å—Ç–∞–≤ –∫–ª–∞–Ω–∞ , —Å–æ–±—Ä–∞–Ω–Ω—ã–π –∏–∑ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ —Å–≤–æ–µ–≥–æ –¥–µ–ª–∞.
–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Å–∏–ª—ë–Ω –∏ –æ–ø—ã—Ç–µ–Ω
‚öîÔ∏è **II –°–æ—Å—Ç–∞–≤** ‚Äî  –í—Ç–æ—Ä–æ–π —Å–æ—Å—Ç–∞–≤ –ø–æ —Å–∏–ª–µ
–ú–µ–Ω–µ–µ –æ–ø—ã—Ç–Ω—ã —á–µ–º –ø–µ—Ä–≤—ã–π —Å–æ—Å—Ç–∞–≤, –Ω–æ —Ç–∞–∫-–∂–µ —è–≤–ª—è–µ—Ç—Å—è –æ—á–µ–Ω—å —Å–∏–ª—å–Ω—ã–º —Å–æ—Å—Ç–∞–≤–æ–º —Å–æ–±—Ä–∞–Ω–Ω—ã–º –∏–∑ –ª—é–¥–µ–π –∫–æ—Ç–æ—Ä—ã–µ –≥–æ—Ç–æ–≤—ã —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –∏ –∏–¥—Ç–∏ –¥–∞–ª—å—à–µ –∫ —Ü–µ–ª–∏.  
üõ°Ô∏è **III –°–æ—Å—Ç–∞–≤** ‚Äî –≠—Ç–æ—Ç —Å–æ—Å—Ç–∞–≤ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω –∏–∑ –ª—é–¥–µ–π –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç—è—Ç —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –≤ —Å–≤–æ–µ–π —Å—Ñ–µ—Ä–µ —á—Ç–æ-–±—ã —Å—Ç–∞—Ç—å —Å–∏–ª—å–Ω–µ–µ, –≤—ã—à–µ, –ª—É—á—à–µ –∏ –æ–ø—ã—Ç–Ω–µ–µ!
üíª **IV –°–æ—Å—Ç–∞–≤** ‚Äî –ö–æ–¥–µ—Ä—ã, –ø–µ–Ω—Ç–µ—Å—Ç, –¥–∏–∑–∞–π–Ω–µ—Ä—ã –∏ —Ç–¥.
–¢—É—Ç –Ω–∞—Ö–æ–¥—è—Ç—Å—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã , –ø–µ–Ω—Ç–µ—Å—Ç–µ—Ä—ã , –ª—é–¥–∏ –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–Ω–∏–º–∞—é—Ç—Å—è DDoS-–∞—Ç–∞–∫–∞–º–∏ , –¥–∏–∑–∞–π–Ω–µ—Ä—ã –∏ –ª—é–¥–∏ –≤ –ø–æ–¥–æ–±–Ω—ã—Ö —Ç–æ–º—É –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è—Ö.
üè† **Family** ‚Äî –ú–∏—Ä–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏

**üìù –ü—Ä–æ—Ü–µ—Å—Å –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏:**
1. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω—É–∂–Ω–æ–≥–æ —Å–æ—Å—Ç–∞–≤–∞
2. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å–µ–±–µ
3. –î–æ–∂–¥–∏—Ç–µ—Å—å —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º–∏
4. –ü–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–µ—à–µ–Ω–∏–∏ –≤ –õ–°

_–£–¥–∞—á–∏ –≤ –ø–æ–¥–∞—á–µ –∑–∞—è–≤–∫–∏!_ ‚ú®
""",
        color=discord.Color.blue()
    )
    embed.set_footer(text="Forest of Reapers ‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –∑–∞—è–≤–æ–∫")
    msg = await ctx.send(embed=embed, view=ApplicationView())
    await ctx.send(f"‚úÖ –ú–µ–Ω—é –∑–∞—è–≤–æ–∫ —Å–æ–∑–¥–∞–Ω–æ! ID —Å–æ–æ–±—â–µ–Ω–∏—è: `{msg.id}`", delete_after=10)

@bot1.command()
@commands.has_permissions(moderate_members=True)
async def application_stats(ctx):
    """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞—è–≤–æ–∫"""
    total_apps = len(last_application_times)
    recent_apps = sum(1 for timestamp in last_application_times.values() 
                     if datetime.utcnow() - timestamp < timedelta(hours=24))
    
    embed = discord.Embed(
        title="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞—è–≤–æ–∫",
        color=discord.Color.blue()
    )
    embed.add_field(name="üìà –í—Å–µ–≥–æ –∑–∞—è–≤–æ–∫", value=f"`{total_apps}`", inline=True)
    embed.add_field(name="üïê –ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24—á", value=f"`{recent_apps}`", inline=True)
    embed.add_field(name="‚è±Ô∏è –ö—É–ª–¥–∞—É–Ω", value=f"`{APPLICATION_COOLDOWN.total_seconds()//60} –º–∏–Ω—É—Ç`", inline=True)
    
    await ctx.send(embed=embed)

@bot1.command()
@commands.has_permissions(administrator=True)
async def set_cooldown(ctx, minutes: int):
    """–ò–∑–º–µ–Ω–∏—Ç—å –∫—É–ª–¥–∞—É–Ω –º–µ–∂–¥—É –∑–∞—è–≤–∫–∞–º–∏"""
    global APPLICATION_COOLDOWN
    APPLICATION_COOLDOWN = timedelta(minutes=minutes)
    await ctx.send(f"‚úÖ –ö—É–ª–¥–∞—É–Ω –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ **{minutes} –º–∏–Ω—É—Ç**")

@bot1.command()
@commands.has_permissions(administrator=True)
async def recreate_menu(ctx):
    """–ü–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –º–µ–Ω—é –∑–∞—è–≤–æ–∫ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –∫–∞–Ω–∞–ª–µ"""
    try:
        channel = bot1.get_channel(MENU_CHANNEL_ID)
        if not channel:
            await ctx.send(f"‚ùå –ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {MENU_CHANNEL_ID}")
            return
        
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –º–µ–Ω—é
        deleted_count = 0
        async for message in channel.history(limit=100):
            if message.author == bot1.user and message.embeds:
                embed = message.embeds[0]
                if "–ó–∞—è–≤–∫–∏ –≤ –∫–ª–∞–Ω Forest of Reapers" in embed.title:
                    await message.delete()
                    deleted_count += 1
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –º–µ–Ω—é
        embed = discord.Embed(
            title="üìã –ó–∞—è–≤–∫–∏ –≤ –∫–ª–∞–Ω Forest of Reapers",
            description="""**–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!** üåü

–ó–∞—è–≤–∫–∏ –≤ –∫–ª–∞–Ω **Forest of Reapers** –æ—Ç–∫—Ä—ã—Ç—ã!

**üéØ –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Å–æ—Å—Ç–∞–≤:**

üèÜ **I –°–æ—Å—Ç–∞–≤** ‚Äî –õ–∏–¥–∏—Ä—É—é—â–∏–π –ø–æ —Å–∏–ª–µ —Å–æ—Å—Ç–∞–≤
–°–∞–º—ã–π —Å–∏–ª—å–Ω—ã–π —Å–æ—Å—Ç–∞–≤ –∫–ª–∞–Ω–∞ , —Å–æ–±—Ä–∞–Ω–Ω—ã–π –∏–∑ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ —Å–≤–æ–µ–≥–æ –¥–µ–ª–∞.
–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Å–∏–ª—ë–Ω –∏ –æ–ø—ã—Ç–µ–Ω
‚öîÔ∏è **II –°–æ—Å—Ç–∞–≤** ‚Äî  –í—Ç–æ—Ä–æ–π —Å–æ—Å—Ç–∞–≤ –ø–æ —Å–∏–ª–µ
–ú–µ–Ω–µ–µ –æ–ø—ã—Ç–Ω—ã —á–µ–º –ø–µ—Ä–≤—ã–π —Å–æ—Å—Ç–∞–≤, –Ω–æ —Ç–∞–∫-–∂–µ —è–≤–ª—è–µ—Ç—Å—è –æ—á–µ–Ω—å —Å–∏–ª—å–Ω—ã–º —Å–æ—Å—Ç–∞–≤–æ–º —Å–æ–±—Ä–∞–Ω–Ω—ã–º –∏–∑ –ª—é–¥–µ–π –∫–æ—Ç–æ—Ä—ã–µ –≥–æ—Ç–æ–≤—ã —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –∏ –∏–¥—Ç–∏ –¥–∞–ª—å—à–µ –∫ —Ü–µ–ª–∏.  
üõ°Ô∏è **III –°–æ—Å—Ç–∞–≤** ‚Äî –≠—Ç–æ—Ç —Å–æ—Å—Ç–∞–≤ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω –∏–∑ –ª—é–¥–µ–π –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç—è—Ç —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –≤ —Å–≤–æ–µ–π —Å—Ñ–µ—Ä–µ —á—Ç–æ-–±—ã —Å—Ç–∞—Ç—å —Å–∏–ª—å–Ω–µ–µ, –≤—ã—à–µ, –ª—É—á—à–µ –∏ –æ–ø—ã—Ç–Ω–µ–µ!
üíª **IV –°–æ—Å—Ç–∞–≤** ‚Äî –ö–æ–¥–µ—Ä—ã, –ø–µ–Ω—Ç–µ—Å—Ç, –¥–∏–∑–∞–π–Ω–µ—Ä—ã –∏ —Ç–¥.
–¢—É—Ç –Ω–∞—Ö–æ–¥—è—Ç—Å—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã , –ø–µ–Ω—Ç–µ—Å—Ç–µ—Ä—ã , –ª—é–¥–∏ –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–Ω–∏–º–∞—é—Ç—Å—è DDoS-–∞—Ç–∞–∫–∞–º–∏ , –¥–∏–∑–∞–π–Ω–µ—Ä—ã –∏ –ª—é–¥–∏ –≤ –ø–æ–¥–æ–±–Ω—ã—Ö —Ç–æ–º—É –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è—Ö.
üè† **Family** ‚Äî –ú–∏—Ä–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏

**üìù –ü—Ä–æ—Ü–µ—Å—Å –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏:**
1. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω—É–∂–Ω–æ–≥–æ —Å–æ—Å—Ç–∞–≤–∞
2. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å–µ–±–µ
3. –î–æ–∂–¥–∏—Ç–µ—Å—å —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º–∏
4. –ü–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–µ—à–µ–Ω–∏–∏ –≤ –õ–°

_–£–¥–∞—á–∏ –≤ –ø–æ–¥–∞—á–µ –∑–∞—è–≤–∫–∏!_ ‚ú®
""",
            color=discord.Color.blue()
        )
        embed.set_footer(text="Forest of Reapers ‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –∑–∞—è–≤–æ–∫")
        
        await channel.send(embed=embed, view=ApplicationView())
        await ctx.send(f"‚úÖ –ú–µ–Ω—é –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–æ! –£–¥–∞–ª–µ–Ω–æ —Å—Ç–∞—Ä—ã—Ö –º–µ–Ω—é: {deleted_count}")
        
    except Exception as e:
        await ctx.send(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–∏ –º–µ–Ω—é: {e}")

@bot1.command()
@commands.has_permissions(moderate_members=True)
async def clear_cooldown(ctx, user: discord.Member):
    """–°–±—Ä–æ—Å–∏—Ç—å –∫—É–ª–¥–∞—É–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    if user.id in last_application_times:
        del last_application_times[user.id]
        await ctx.send(f"‚úÖ –ö—É–ª–¥–∞—É–Ω —Å–±—Ä–æ—à–µ–Ω –¥–ª—è {user.mention}")
    else:
        await ctx.send(f"‚ùå –£ {user.mention} –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∫—É–ª–¥–∞—É–Ω–∞")

@bot1.command(name="–æ—Ç–≤–µ—Ç")
async def answer_question(ctx, question_id: str, *, answer: str):
    """–û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–æ–π –≤–æ–ø—Ä–æ—Å
        if question_id not in pending_questions:
            await ctx.send("‚ùå –í–æ–ø—Ä–æ—Å —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω.", delete_after=10)
            return
        
        question_data = pending_questions[question_id]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–≤–µ—á–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        if ctx.author.id != question_data["applicant"].id:
            await ctx.send("‚ùå –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–≤–µ—á–∞—Ç—å —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–≤–æ–∏ –≤–æ–ø—Ä–æ—Å—ã.", delete_after=10)
            return
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –≤ –∫–∞–Ω–∞–ª –∑–∞—è–≤–æ–∫
        channel = bot1.get_channel(APPLICATION_CHANNEL_ID)
        if channel:
            response_embed = discord.Embed(
                title="üí¨ –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å",
                color=discord.Color.green()
            )
            response_embed.add_field(name="üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", value=f"{ctx.author.mention}", inline=True)
            response_embed.add_field(name="üë®‚Äçüíº –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä –∑–∞–¥–∞–≤—à–∏–π –≤–æ–ø—Ä–æ—Å", value=f"{question_data['moderator'].mention}", inline=True)
            response_embed.add_field(name="üÜî ID –≤–æ–ø—Ä–æ—Å–∞", value=f"`{question_id}`", inline=True)
            response_embed.add_field(name="‚ùì –ò–∑–Ω–∞—á–∞–ª—å–Ω—ã–π –≤–æ–ø—Ä–æ—Å", value=f"```{question_data['question']}```", inline=False)
            response_embed.add_field(name="üí¨ –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", value=f"```{answer}```", inline=False)
            response_embed.set_thumbnail(url=ctx.author.display_avatar.url)
            response_embed.set_footer(text=f"–í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: {datetime.utcnow().strftime('%d.%m.%Y %H:%M')}")
            
            await channel.send(embed=response_embed)
        
        # –£–≤–µ–¥–æ–º–ª—è–µ–º –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –≤ –õ–°
        try:
            mod_embed = discord.Embed(
                title="üì¨ –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å",
                description=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {ctx.author.mention} –æ—Ç–≤–µ—Ç–∏–ª –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å:",
                color=discord.Color.blue()
            )
            mod_embed.add_field(name="‚ùì –í–∞—à –≤–æ–ø—Ä–æ—Å", value=f"```{question_data['question']}```", inline=False)
            mod_embed.add_field(name="üí¨ –û—Ç–≤–µ—Ç", value=f"```{answer}```", inline=False)
            mod_embed.add_field(name="üîó –°–µ—Ä–≤–µ—Ä", value=f"{question_data['guild'].name}", inline=True)
            await question_data["moderator"].send(embed=mod_embed)
        except Exception as e:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –õ–° –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É: {e}")
        
        # –£–¥–∞–ª—è–µ–º –≤–æ–ø—Ä–æ—Å –∏–∑ –æ–∂–∏–¥–∞—é—â–∏—Ö
        del pending_questions[question_id]
        
        await ctx.send("‚úÖ –í–∞—à –æ—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º!", delete_after=10)
        
        # –£–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —á–∏—Å—Ç–æ—Ç—ã
        try:
            await ctx.message.delete()
        except:
            pass
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ç–≤–µ—Ç–∞: {e}")
        await ctx.send("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞.", delete_after=10)

@bot1.command()
@commands.has_permissions(moderate_members=True)
async def pending_questions_list(ctx):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –æ–∂–∏–¥–∞—é—â–∏—Ö –æ—Ç–≤–µ—Ç–∞ –≤–æ–ø—Ä–æ—Å–æ–≤"""
    try:
        if not pending_questions:
            await ctx.send("üì≠ –ù–µ—Ç –æ–∂–∏–¥–∞—é—â–∏—Ö –æ—Ç–≤–µ—Ç–∞ –≤–æ–ø—Ä–æ—Å–æ–≤.")
            return
        
        embed = discord.Embed(
            title="üìã –û–∂–∏–¥–∞—é—â–∏–µ –æ—Ç–≤–µ—Ç–∞ –≤–æ–ø—Ä–æ—Å—ã",
            description=f"–í—Å–µ–≥–æ –≤–æ–ø—Ä–æ—Å–æ–≤: {len(pending_questions)}",
            color=discord.Color.orange()
        )
        
        count = 0
        for question_id, data in pending_questions.items():
            if count >= 10:  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
                embed.add_field(name="‚ö†Ô∏è", value=f"–ò –µ—â—ë {len(pending_questions) - 10} –≤–æ–ø—Ä–æ—Å–æ–≤...", inline=False)
                break
                
            time_ago = datetime.utcnow() - data["timestamp"]
            hours = int(time_ago.total_seconds() // 3600)
            minutes = int((time_ago.total_seconds() % 3600) // 60)
            
            embed.add_field(
                name=f"üÜî {question_id}",
                value=f"üë§ {data['applicant'].display_name}\n"
                      f"üë®‚Äçüíº {data['moderator'].display_name}\n"
                      f"‚è∞ {hours}—á {minutes}–º –Ω–∞–∑–∞–¥\n"
                      f"‚ùì {data['question'][:50]}{'...' if len(data['question']) > 50 else ''}",
                inline=True
            )
            count += 1
        
        await ctx.send(embed=embed)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤: {e}")
        await ctx.send("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤.")

@bot1.command()
@commands.has_permissions(moderate_members=True)
async def remove_question(ctx, question_id: str):
    """–£–¥–∞–ª–∏—Ç—å –≤–æ–ø—Ä–æ—Å –∏–∑ –æ–∂–∏–¥–∞—é—â–∏—Ö (–µ—Å–ª–∏ –±–æ–ª—å—à–µ –Ω–µ –∞–∫—Ç—É–∞–ª–µ–Ω)"""
    try:
        if question_id not in pending_questions:
            await ctx.send("‚ùå –í–æ–ø—Ä–æ—Å —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return
        
        question_data = pending_questions[question_id]
        del pending_questions[question_id]
        
        embed = discord.Embed(
            title="üóëÔ∏è –í–æ–ø—Ä–æ—Å —É–¥–∞–ª–µ–Ω",
            description=f"–í–æ–ø—Ä–æ—Å –∫ {question_data['applicant'].mention} —É–¥–∞–ª–µ–Ω –∏–∑ –æ–∂–∏–¥–∞—é—â–∏—Ö",
            color=discord.Color.red()
        )
        embed.add_field(name="‚ùì –£–¥–∞–ª–µ–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å", value=f"```{question_data['question']}```", inline=False)
        
        await ctx.send(embed=embed)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≤–æ–ø—Ä–æ—Å–∞: {e}")
        await ctx.send("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≤–æ–ø—Ä–æ—Å–∞.")

@bot1.command()
@commands.has_permissions(administrator=True)
async def status(ctx):
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞"""
    embed = discord.Embed(
        title="ü§ñ –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞ –∑–∞—è–≤–æ–∫",
        color=discord.Color.green()
    )
    embed.add_field(name="üìä –°–æ—Å—Ç–æ—è–Ω–∏–µ", value="‚úÖ –û–Ω–ª–∞–π–Ω", inline=True)
    embed.add_field(name="üèì –ü–∏–Ω–≥", value=f"`{round(bot1.latency * 1000)}ms`", inline=True)
    embed.add_field(name="üîó –°–µ—Ä–≤–µ—Ä—ã", value=f"`{len(bot1.guilds)}`", inline=True)
    await ctx.send(embed=embed)

# === –í–¢–û–†–û–ô –ë–û–¢ - –ú–û–î–ï–†–ê–¶–ò–Ø ===

class VerifyButton(ui.View):
    def __init__(self):
        super().__init__(timeout=None)  # –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è persistent view

    @ui.button(label="–ü—Ä–æ–π—Ç–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é", style=discord.ButtonStyle.success, custom_id="verify_button")
    async def verify(self, interaction: discord.Interaction, button: ui.Button):
        code = random.randint(1000, 9999)
        verification_codes[interaction.user.id] = code
        modal = VerificationModal()
        modal.code_input.label = f"–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: {code}"
        if not interaction.response.is_done():
            await interaction.response.send_modal(modal)

@bot2.command()
@commands.has_permissions(administrator=True)
async def verify_setup(ctx):
    embed = discord.Embed(
        title="üõ°Ô∏è –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è",
        description="–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ –≤–≤–µ–¥–∏—Ç–µ —É–∫–∞–∑–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Å–µ—Ä–≤–µ—Ä—É.",
        color=discord.Color.green()
    )
    embed.set_image(url="https://cdn.discordapp.com/attachments/900731112811290655/1378050895337623693/Frame_2.png?ex=683b3168&is=6839dfe8&hm=2edef35f12ce2aa3f7ae23cab0369e6d52726d00f88857edcdaec6b51a6b69f7&")
    await ctx.send(embed=embed, view=VerifyButton())


@bot2.event
async def on_ready():
    logger.info(f"‚úÖ –ë–æ—Ç –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ {bot2.user}")
    print(f"‚úÖ –ë–æ—Ç –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ {bot2.user}")
    bot2.add_view(VerifyButton())  # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É

    # === –ê–í–¢–û-–°–û–ó–î–ê–ù–ò–ï –ú–ï–ù–Æ –í–ï–†–ò–§–ò–ö–ê–¶–ò–ò ===
    VERIFY_MENU_CHANNEL_ID = 1378032629680574546 # –ó–∞–º–µ–Ω–∏—Ç—å –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏

    try:
        channel = bot2.get_channel(VERIFY_MENU_CHANNEL_ID)
        if channel:
            async for message in channel.history(limit=50):
                if message.author == bot2.user and message.embeds:
                    embed = message.embeds[0]
                    if "–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è" in embed.title:
                        logger.info("üõ°Ô∏è –ú–µ–Ω—é –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                        return

            embed = discord.Embed(
                title="üõ°Ô∏è –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è",
                description="–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ –≤–≤–µ–¥–∏—Ç–µ —É–∫–∞–∑–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Å–µ—Ä–≤–µ—Ä—É.",
                color=discord.Color.green()
            )
            embed.set_image(url="https://cdn.discordapp.com/attachments/900731112811290655/1378050895337623693/Frame_2.png?ex=683b3168&is=6839dfe8&hm=2edef35f12ce2aa3f7ae23cab0369e6d52726d00f88857edcdaec6b51a6b69f7&")
            await channel.send(embed=embed, view=VerifyButton())
            logger.info("üõ°Ô∏è –ú–µ–Ω—é –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
        else:
            logger.warning(f"‚ùå –ö–∞–Ω–∞–ª —Å ID {VERIFY_MENU_CHANNEL_ID} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–µ–Ω—é –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏: {e}")

@bot2.event


async def on_message(message):
    """–£–ª—É—á—à–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∞–Ω—Ç–∏–∫—Ä–∞—à —Å–∏—Å—Ç–µ–º–æ–π"""
    if message.author.bot:
        return

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—ã–µ —É—Å–ª–æ–≤–∏—è
        if not message.guild:
            return  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –õ–°
            
        if not isinstance(message.author, discord.Member):
            logger.warning(f"‚ö†Ô∏è –ê–≤—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —Å–µ—Ä–≤–µ—Ä–∞: {message.author}")
            return

        author = message.author
        content = message.content.lower()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ (–º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω—ã –æ—Ç —Ñ–∏–ª—å—Ç—Ä–æ–≤)
        if author.guild_permissions.moderate_members or author.guild_permissions.administrator:
            await bot2.process_commands(message)
            return

        # === –ê–ù–¢–ò-@EVERYONE –ò @HERE ===
        try:
            if "@everyone" in content or "@here" in content:
                await handle_violation(message, author, "–ü–æ–ø—ã—Ç–∫–∞ —É–ø–æ–º—è–Ω—É—Ç—å @everyone / @here")
                return
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ –∞–Ω—Ç–∏-@everyone: {e}")

        # === –ê–ù–¢–ò-–°–°–´–õ–ö–ò ===
        try:
            if any(bad in content for bad in ["discord.gg/", "discord.com"]) and not any(allowed in content for allowed in ["tenor.com", "imgur.com"]):
                await handle_violation(message, author, "–û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Å—ã–ª–æ–∫ –∑–∞–ø—Ä–µ—â–µ–Ω–∞")
                return
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ –∞–Ω—Ç–∏-—Å—Å—ã–ª–∫–∏: {e}")

        # === –ê–ù–¢–ò-–ü–ò–ù–ì ===
        try:
            if len(message.mentions) >= MENTION_LIMIT:
                mention_users = [f"{user.display_name}" for user in message.mentions[:3]]
                await handle_violation(message, author, f"–ú–∞—Å—Å–æ–≤–æ–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ ({len(message.mentions)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {', '.join(mention_users)}...)")
                return
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ –∞–Ω—Ç–∏-–ø–∏–Ω–≥: {e}")

        # === –ê–ù–¢–ò-–û–ü–ê–°–ù–´–ï –í–õ–û–ñ–ï–ù–ò–Ø ===
        try:
            dangerous_exts = [".exe", ".bat", ".scr", ".cmd", ".js"]
            for attachment in message.attachments:
                if any(attachment.filename.lower().endswith(ext) for ext in dangerous_exts):
                    await handle_violation(message, author, f"–û–ø–∞—Å–Ω–æ–µ –≤–ª–æ–∂–µ–Ω–∏–µ: {attachment.filename}")
                    return
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ –∞–Ω—Ç–∏-–≤–ª–æ–∂–µ–Ω–∏—è: {e}")


        # === –ê–ù–¢–ò-–°–ü–ê–ú ===
        try:
            now = time.time()
            user_log = user_message_log[author.id]
            user_log.append(now)
            
            # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞–ø–∏—Å–∏
            user_message_log[author.id] = [t for t in user_log if now - t <= SPAM_INTERVAL]

            if len(user_message_log[author.id]) > SPAM_THRESHOLD:
                await handle_violation(message, author, f"–°–ø–∞–º: {len(user_message_log[author.id])} —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞ {SPAM_INTERVAL} —Å–µ–∫")
                user_message_log[author.id] = []  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫
                return
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ –∞–Ω—Ç–∏-—Å–ø–∞–º: {e}")
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø—Ä–∏ –æ—à–∏–±–∫–µ —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è
            try:
                user_message_log[author.id] = []
            except:
                pass

        # === –ê–ù–¢–ò-–ö–ê–ü–° (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞) ===
        try:
            if len(content) > 10:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –¥–ª–∏–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                caps_count = sum(1 for char in message.content if char.isupper())
                caps_ratio = caps_count / len(message.content)
                
                if caps_ratio > 0.7 and caps_count > 15:  # 70% –∑–∞–≥–ª–∞–≤–Ω—ã—Ö –±—É–∫–≤
                    await handle_violation(message, author, f"–ó–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –∑–∞–≥–ª–∞–≤–Ω—ã–º–∏ –±—É–∫–≤–∞–º–∏ ({caps_count} –∏–∑ {len(message.content)})")
                    return
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ –∞–Ω—Ç–∏-–∫–∞–ø—Å: {e}")

        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –µ—Å–ª–∏ –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã
        await bot2.process_commands(message)
        
    except discord.Forbidden:
        logger.warning(f"‚ö†Ô∏è –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç {message.author}")
    except discord.HTTPException as e:
        logger.error(f"‚ùå HTTP –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
    except Exception as e:
        import traceback
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç {message.author}: {e}")
        logger.error(f"–¢—Ä–µ–π—Å–±–µ–∫: {traceback.format_exc()}")
        
        # –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –∫—Ä–∏—Ç–∏—á–µ—Å–∫—É—é –æ—à–∏–±–∫—É –≤ Discord
        try:
            if message.guild:
                log_channel = message.guild.get_channel(LOG_CHANNEL_ID)
                if log_channel:
                    error_embed = discord.Embed(
                        title="üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏",
                        description="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è",
                        color=discord.Color.red()
                    )
                    error_embed.add_field(name="üë§ –ê–≤—Ç–æ—Ä", value=f"{message.author.mention}", inline=True)
                    error_embed.add_field(name="üìç –ö–∞–Ω–∞–ª", value=f"{message.channel.mention}", inline=True)
                    error_embed.add_field(name="üî• –û—à–∏–±–∫–∞", value=f"```{str(e)[:500]}```", inline=False)
                    error_embed.timestamp = discord.utils.utcnow()
                    await log_channel.send(embed=error_embed)
        except Exception as log_error:
            logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –∫—Ä–∏—Ç–∏—á–µ—Å–∫—É—é –æ—à–∏–±–∫—É: {log_error}")

# === –£–õ–£–ß–®–ï–ù–ù–ê–Ø –û–ë–†–ê–ë–û–¢–ö–ê –ù–ê–†–£–®–ï–ù–ò–ô ===
async def handle_violation(message, user, reason):
    """–£–ª—É—á—à–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–π —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
    deletion_success = False
    timeout_success = False
    log_success = False
    
    # –ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
    try:
        await message.delete()
        deletion_success = True
        logger.info(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ: {user} - {reason}")
    except discord.NotFound:
        logger.warning(f"‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ —É–¥–∞–ª–µ–Ω–æ: {user}")
        deletion_success = True  # –°—á–∏—Ç–∞–µ–º —É—Å–ø–µ—Ö–æ–º, —Ç–∞–∫ –∫–∞–∫ —Ü–µ–ª—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞
    except discord.Forbidden:
        logger.error(f"‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: {user}")
    except Exception as e:
        logger.error(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏: {e}")
    
    # –ü–æ–ø—ã—Ç–∫–∞ –≤—ã–¥–∞—Ç—å —Ç–∞–π–º-–∞—É—Ç
    try:
        timeout_success = await timeout_user(user, reason)
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–∞–π–º-–∞—É—Ç–µ: {e}")
    
    # –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞—Ä—É—à–µ–Ω–∏–µ
    try:
        log_success = await log_violation(message.guild, user, reason, message.content, deletion_success, timeout_success)
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
    
    # –ò—Ç–æ–≥–æ–≤–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    logger.info(f"üìä –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞: {user} | –£–¥–∞–ª–µ–Ω–∏–µ: {deletion_success} | –¢–∞–π–º-–∞—É—Ç: {timeout_success} | –õ–æ–≥: {log_success}")
    await apply_strike(user, reason, message.guild)

async def timeout_user(member: discord.Member, reason="–ù–∞—Ä—É—à–µ–Ω–∏–µ", duration=TIMEOUT_DURATION):
    """–£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–¥–∞—á–∏ —Ç–∞–π–º-–∞—É—Ç–∞ —Å –≤–æ–∑–≤—Ä–∞—Ç–æ–º —Å—Ç–∞—Ç—É—Å–∞"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ–º –ª–∏ –º—ã —É–ø—Ä–∞–≤–ª—è—Ç—å —ç—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
        if member.guild_permissions.administrator:
            logger.warning(f"‚ö†Ô∏è –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–º—É—Ç–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {member}")
            return False
            
        if member.top_role >= member.guild.me.top_role:
            logger.warning(f"‚ö†Ô∏è –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã—à–µ —Ä–æ–ª–∏ –±–æ—Ç–∞: {member}")
            return False
        
        until = discord.utils.utcnow() + timedelta(seconds=duration)
        await member.timeout(until, reason=reason)
        logger.info(f"‚è≥ –¢–∞–π–º-–∞—É—Ç –≤—ã–¥–∞–Ω {member}: {reason} (–Ω–∞ {duration//60} –º–∏–Ω)")
        return True
        
    except discord.Forbidden:
        logger.warning(f"‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–¥–∞—á–∏ —Ç–∞–π–º-–∞—É—Ç–∞: {member}")
        return False
    except discord.HTTPException as e:
        logger.error(f"‚ùå HTTP –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–∞–π–º-–∞—É—Ç–µ: {e}")
        return False
    except Exception as e:
        logger.error(f"‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–∞–π–º-–∞—É—Ç–µ: {e}")
        return False

async def log_violation(guild, user, reason, msg_content="", deletion_success=True, timeout_success=True):
    try:
        channel = bot2.get_channel(LOG_CHANNEL_ID)
        if not channel or (guild and channel.guild.id != guild.id):
            logger.warning("–õ–æ–≥-–∫–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å–µ—Ä–≤–µ—Ä—É.")
            return False

        embed = discord.Embed(title="–ù–∞—Ä—É—à–µ–Ω–∏–µ", color=0xff0000)
        embed.add_field(name="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", value=str(user), inline=True)
        embed.add_field(name="–ü—Ä–∏—á–∏–Ω–∞", value=reason, inline=True)

        status = "–£–¥–∞–ª–µ–Ω–∏–µ: " + ("‚úÖ" if deletion_success else "‚ùå") + " | –¢–∞–π–º-–∞—É—Ç: " + ("‚úÖ" if timeout_success else "‚ùå")
        embed.add_field(name="–°—Ç–∞—Ç—É—Å", value=status, inline=True)

        if msg_content.strip():
            embed.add_field(name="–°–æ–æ–±—â–µ–Ω–∏–µ", value=msg_content[:1000], inline=False)

        embed.set_footer(text="–ú–æ–¥–µ—Ä–∞—Ü–∏—è: " + guild.name)

        await channel.send(embed=embed)
        logger.info("–ó–∞–ª–æ–≥–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –æ—Ç " + str(user))
        return True

    except Exception as e:
        logger.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–∏: " + str(e))
        return False
            
        # –°–æ–∑–¥–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–π embed
        embed = discord.Embed(title="üö® –ù–∞—Ä—É—à–µ–Ω–∏–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ", color=0xff0000)
        embed.add_field(name="üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", value=f"{user.mention}\n`{user}` (ID: {user.id})", inline=True)
        embed.add_field(name="üö® –ü—Ä–∏—á–∏–Ω–∞", value=f"```{reason}```", inline=True)
        embed.add_field(name="üìä –°—Ç–∞—Ç—É—Å –¥–µ–π—Å—Ç–≤–∏–π", 
                       value=f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ: {'‚úÖ' if deletion_success else '‚ùå'}\n"
                             f"‚è≥ –¢–∞–π–º-–∞—É—Ç: {'‚úÖ' if timeout_success else '‚ùå'}", 
                       inline=True)
        
        if msg_content and len(msg_content.strip()) > 0:
            # –û–±—Ä–µ–∑–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –µ—Å–ª–∏ –æ–Ω–æ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ
            content_preview = msg_content[:800] + "..." if len(msg_content) > 800 else msg_content
            embed.add_field(name="üìù –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏—è", value=f"```{content_preview}```", inline=False)
        
        embed.set_thumbnail(url=user.display_avatar.url)
        embed.set_footer(text=f"–°–∏—Å—Ç–µ–º–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ ‚Ä¢ {guild.name}")
        embed.timestamp = discord.utils.utcnow()
        
        await channel.send(embed=embed)
        logger.info(f"üìù –ù–∞—Ä—É—à–µ–Ω–∏–µ –∑–∞–ª–æ–≥–∏—Ä–æ–≤–∞–Ω–æ: {user}")
        return True
        
    except discord.Forbidden:
        logger.error(f"‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –ª–æ–≥-–∫–∞–Ω–∞–ª")
        return False
    except discord.HTTPException as e:
        logger.error(f"‚ùå HTTP –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        return False
    except Exception as e:
        logger.error(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        return False

# === –ö–û–ú–ê–ù–î–´ –ú–û–î–ï–†–ê–¶–ò–ò ===

@bot2.command()
@commands.has_permissions(moderate_members=True)
async def timeout(ctx, member: discord.Member, minutes: int = 30, *, reason="–ë–µ–∑ –ø—Ä–∏—á–∏–Ω—ã"):
    """–í—ã–¥–∞—Ç—å —Ç–∞–π–º-–∞—É—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
    try:
        duration = minutes * 60
        await timeout_user(member, reason, duration)
        await ctx.send(f"‚è≥ {member.mention} –ø–æ–ª—É—á–∏–ª —Ç–∞–π–º-–∞—É—Ç –Ω–∞ {minutes} –º–∏–Ω—É—Ç. –ü—Ä–∏—á–∏–Ω–∞: {reason}")
        await log_violation(ctx.guild, member, f"–ö–æ–º–∞–Ω–¥–Ω—ã–π —Ç–∞–π–º-–∞—É—Ç: {reason}")
    except Exception as e:
        await ctx.send(f"‚ùå –û—à–∏–±–∫–∞: {e}")

@bot2.command()
@commands.has_permissions(moderate_members=True)
async def untimeout(ctx, member: discord.Member):
    """–°–Ω—è—Ç—å —Ç–∞–π–º-–∞—É—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        await member.timeout(None)
        await ctx.send(f"‚úÖ –¢–∞–π–º-–∞—É—Ç —Å–Ω—è—Ç —Å {member.mention}")
    except Exception as e:
        await ctx.send(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–Ω—è—Ç–∏–∏ —Ç–∞–π–º-–∞—É—Ç–∞: {e}")

@bot2.command()
@commands.has_permissions(manage_messages=True)
async def clear(ctx, amount: int = 10):
    """–û—á–∏—Å—Ç–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ"""
    try:
        deleted = await ctx.channel.purge(limit=amount + 1)  # +1 —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—É
        await ctx.send(f"üßπ –£–¥–∞–ª–µ–Ω–æ {len(deleted) - 1} —Å–æ–æ–±—â–µ–Ω–∏–π.", delete_after=5)
    except Exception as e:
        await ctx.send(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ: {e}")

@bot2.command()
@commands.has_permissions(moderate_members=True)
async def warn(ctx, member: discord.Member, *, reason="–ë–µ–∑ –ø—Ä–∏—á–∏–Ω—ã"):
    """–í—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ"""
    try:
        await ctx.send(f"‚ö†Ô∏è {member.mention} –ø–æ–ª—É—á–∏–ª –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ü—Ä–∏—á–∏–Ω–∞: {reason}")
        await log_violation(ctx.guild, member, f"–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: {reason}")
    except Exception as e:
        await ctx.send(f"‚ùå –û—à–∏–±–∫–∞: {e}")

@bot2.command()
@commands.has_permissions(administrator=True)
async def status(ctx):
    """–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏"""
    try:
        # –ü–æ–¥—Å—á–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Å–ø–∞–º-–ª–æ–≥–µ
        active_users = len([user_id for user_id, timestamps in user_message_log.items() if timestamps])
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥-–∫–∞–Ω–∞–ª–∞
        log_channel = ctx.guild.get_channel(LOG_CHANNEL_ID)
        log_status = "‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω" if log_channel else "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω"
        
        embed = discord.Embed(
            title="ü§ñ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã –º–æ–¥–µ—Ä–∞—Ü–∏–∏",
            description="–î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞",
            color=discord.Color.green()
        )
        embed.add_field(name="üìä –°–æ—Å—Ç–æ—è–Ω–∏–µ", value="‚úÖ –û–Ω–ª–∞–π–Ω", inline=True)
        embed.add_field(name="üèì –ü–∏–Ω–≥", value=f"`{round(bot2.latency * 1000)}ms`", inline=True)
        embed.add_field(name="üîó –°–µ—Ä–≤–µ—Ä—ã", value=f"`{len(bot2.guilds)}`", inline=True)
        
        embed.add_field(name="üìù –õ–æ–≥-–∫–∞–Ω–∞–ª", value=log_status, inline=True)
        embed.add_field(name="üë• –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", value=f"`{active_users}`", inline=True)
        embed.add_field(name="‚öôÔ∏è –ú–æ–¥—É–ª–∏", value="‚úÖ –í—Å–µ –∞–∫—Ç–∏–≤–Ω—ã", inline=True)
        
        embed.add_field(name="üõ°Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞—â–∏—Ç—ã", 
                       value=f"‚Ä¢ –õ–∏–º–∏—Ç —É–ø–æ–º–∏–Ω–∞–Ω–∏–π: `{MENTION_LIMIT}`\n"
                             f"‚Ä¢ –ü–æ—Ä–æ–≥ —Å–ø–∞–º–∞: `{SPAM_THRESHOLD} –∑–∞ {SPAM_INTERVAL}—Å`\n"
                             f"‚Ä¢ –¢–∞–π–º-–∞—É—Ç: `{TIMEOUT_DURATION//60} –º–∏–Ω—É—Ç`", 
                       inline=False)
        
        embed.set_footer(text=f"–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω ‚Ä¢ ID: {bot2.user.id}")
        embed.timestamp = discord.utils.utcnow()
        
        await ctx.send(embed=embed)
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ status: {e}")
        await ctx.send("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã")

@bot2.command()
@commands.has_permissions(moderate_members=True)
async def antispam_stats(ctx):
    """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–Ω—Ç–∏-—Å–ø–∞–º —Å–∏—Å—Ç–µ–º—ã"""
    try:
        if not user_message_log:
            await ctx.send("üìä –ê–Ω—Ç–∏-—Å–ø–∞–º –ª–æ–≥ –ø—É—Å—Ç")
            return
            
        total_tracked = len(user_message_log)
        active_now = len([uid for uid, msgs in user_message_log.items() if msgs])
        
        embed = discord.Embed(
            title="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–Ω—Ç–∏-—Å–ø–∞–º —Å–∏—Å—Ç–µ–º—ã",
            color=discord.Color.blue()
        )
        embed.add_field(name="üë• –í—Å–µ–≥–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è", value=f"`{total_tracked}`", inline=True)
        embed.add_field(name="üî• –ê–∫—Ç–∏–≤–Ω—ã —Å–µ–π—á–∞—Å", value=f"`{active_now}`", inline=True)
        embed.add_field(name="‚öôÔ∏è –ò–Ω—Ç–µ—Ä–≤–∞–ª", value=f"`{SPAM_INTERVAL}—Å`", inline=True)
        
        # –¢–æ–ø —Å–∞–º—ã—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 5)
        if active_now > 0:
            top_users = sorted(
                [(uid, len(msgs)) for uid, msgs in user_message_log.items() if msgs],
                key=lambda x: x[1], reverse=True
            )[:5]
            
            top_text = ""
            for uid, count in top_users:
                try:
                    user = ctx.guild.get_member(uid)
                    name = user.display_name if user else f"ID:{uid}"
                    top_text += f"‚Ä¢ {name}: `{count}` —Å–æ–æ–±—â–µ–Ω–∏–π\n"
                except:
                    top_text += f"‚Ä¢ ID:{uid}: `{count}` —Å–æ–æ–±—â–µ–Ω–∏–π\n"
                    
            embed.add_field(name="üî• –°–∞–º—ã–µ –∞–∫—Ç–∏–≤–Ω—ã–µ", value=top_text or "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö", inline=False)
        
        await ctx.send(embed=embed)
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ antispam_stats: {e}")
        await ctx.send("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")

@bot2.command()
@commands.has_permissions(administrator=True)
async def clear_spam_log(ctx):
    """–û—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥ –∞–Ω—Ç–∏-—Å–ø–∞–º —Å–∏—Å—Ç–µ–º—ã"""
    try:
        old_count = len(user_message_log)
        user_message_log.clear()
        await ctx.send(f"üßπ –õ–æ–≥ –∞–Ω—Ç–∏-—Å–ø–∞–º –æ—á–∏—â–µ–Ω! –£–¥–∞–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: `{old_count}`")
        logger.info(f"–õ–æ–≥ –∞–Ω—Ç–∏-—Å–ø–∞–º –æ—á–∏—â–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º {ctx.author}")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –ª–æ–≥–∞: {e}")
        await ctx.send("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –ª–æ–≥–∞")

# === –§–£–ù–ö–¶–ò–Ø –ó–ê–ü–£–°–ö–ê –° –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ú –ü–ï–†–ï–ó–ê–ü–£–°–ö–û–ú ===
async def run_bot1_with_restart(bot1, token, name):
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö"""
    while True:
        try:
            logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ {name}...")
            await bot1.start(token)
        except discord.LoginFailure:
            logger.error(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –¥–ª—è {name}")
            break
        except Exception as e:
            logger.error(f"‚ùå {name} —É–ø–∞–ª —Å –æ—à–∏–±–∫–æ–π: {e}")
            logger.info(f"üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ {name} —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...")
            await asyncio.sleep(5)
        finally:
            if not bot1.is_closed():
                await bot1.close()

# === –ó–ê–ü–£–°–ö –û–ë–û–ò–• –ë–û–¢–û–í ===

@bot2.event
async def on_member_join(member):
    role = discord.utils.get(member.guild.roles, name="unverify")
    if role:
        await member.add_roles(role)
        logger.info(f"‚úÖ –í—ã–¥–∞–Ω–∞ —Ä–æ–ª—å 'unverify' –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {member}")


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞"""
    try:
        async with asyncio.TaskGroup() as tg:
            tg.create_task(run_bot1_with_restart(
                bot1, 
                "MTM3Njg3NjM5Mjc2MzEwMTI5Ng.GeBnqx.JlvnY-fv2sbjxoPAlyrYJkX6jNW2n5VTER908k",
                "–ë–æ—Ç –∑–∞—è–≤–æ–∫"
            ))
            tg.create_task(run_bot1_with_restart(
                bot2, 
                "MTM3Njg1ODQxMTk0MTEwNTY5NA.GOXnKn.OZ1O8z4vvc4UD6FB23bIr1V81qyjNbgnCDdyFc",
                "–ë–æ—Ç –º–æ–¥–µ—Ä–∞—Ü–∏–∏"
            ))
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        logger.info("–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥...")
        await asyncio.sleep(10)
        await main()

if __name__ == "__main__":
    logger.info("üéØ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –±–æ—Ç–æ–≤...")
    asyncio.run(main())





import random

verification_codes = {}


class VerifyButton(ui.View):
    def __init__(self):
        super().__init__(timeout=None)  # –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è persistent view

    @ui.button(label="–ü—Ä–æ–π—Ç–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é", style=discord.ButtonStyle.success, custom_id="verify_button")
    async def verify(self, interaction: discord.Interaction, button: ui.Button):
        code = random.randint(1000, 9999)
        verification_codes[interaction.user.id] = code
        modal = VerificationModal()
        modal.code_input.label = f"–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: {code}"
        if not interaction.response.is_done():
            await interaction.response.send_modal(modal)

@bot2.command()
@commands.has_permissions(administrator=True)
async def verify_setup(ctx):
    embed = discord.Embed(
        title="üõ°Ô∏è –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è",
        description="–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ –≤–≤–µ–¥–∏—Ç–µ —É–∫–∞–∑–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Å–µ—Ä–≤–µ—Ä—É.",
        color=discord.Color.green()
    )
    embed.set_image(url="https://cdn.discordapp.com/attachments/900731112811290655/1378050895337623693/Frame_2.png?ex=683b3168&is=6839dfe8&hm=2edef35f12ce2aa3f7ae23cab0369e6d52726d00f88857edcdaec6b51a6b69f7&")
    await ctx.send(embed=embed, view=VerifyButton())


@bot2.event
async def on_ready():
    logger.info(f"‚úÖ –ë–æ—Ç –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ {bot2.user}")
    print(f"‚úÖ –ë–æ—Ç –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ {bot2.user}")
    bot2.add_view(VerifyButton())  # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É

    # === –ê–í–¢–û-–°–û–ó–î–ê–ù–ò–ï –ú–ï–ù–Æ –í–ï–†–ò–§–ò–ö–ê–¶–ò–ò ===
    VERIFY_MENU_CHANNEL_ID = 1378032629680574546  # –ó–∞–º–µ–Ω–∏—Ç—å –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏

    try:
        channel = bot2.get_channel(VERIFY_MENU_CHANNEL_ID)
        if channel:
            async for message in channel.history(limit=50):
                if message.author == bot2.user and message.embeds:
                    embed = message.embeds[0]
                    if "–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è" in embed.title:
                        logger.info("üõ°Ô∏è –ú–µ–Ω—é –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                        return

            embed = discord.Embed(
                title="üõ°Ô∏è –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è",
                description="–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ –≤–≤–µ–¥–∏—Ç–µ —É–∫–∞–∑–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Å–µ—Ä–≤–µ—Ä—É.",
                color=discord.Color.green()
            )
            embed.set_image(url="https://cdn.discordapp.com/attachments/900731112811290655/1378050895337623693/Frame_2.png?ex=683b3168&is=6839dfe8&hm=2edef35f12ce2aa3f7ae23cab0369e6d52726d00f88857edcdaec6b51a6b69f7&")
            await channel.send(embed=embed, view=VerifyButton())
            logger.info("üõ°Ô∏è –ú–µ–Ω—é –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
        else:
            logger.warning(f"‚ùå –ö–∞–Ω–∞–ª —Å ID {VERIFY_MENU_CHANNEL_ID} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–µ–Ω—é –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏: {e}")

@bot2.event


async def on_message(message):
    """–£–ª—É—á—à–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∞–Ω—Ç–∏–∫—Ä–∞—à —Å–∏—Å—Ç–µ–º–æ–π"""
    if message.author.bot:
        return

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—ã–µ —É—Å–ª–æ–≤–∏—è
        if not message.guild:
            return  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –õ–°
            
        if not isinstance(message.author, discord.Member):
            logger.warning(f"‚ö†Ô∏è –ê–≤—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —Å–µ—Ä–≤–µ—Ä–∞: {message.author}")
            return

        author = message.author
        content = message.content.lower()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ (–º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω—ã –æ—Ç —Ñ–∏–ª—å—Ç—Ä–æ–≤)
        if author.guild_permissions.moderate_members or author.guild_permissions.administrator:
            await bot2.process_commands(message)
            return

        # === –ê–ù–¢–ò-@EVERYONE –ò @HERE ===
        try:
            if "@everyone" in content or "@here" in content:
                await handle_violation(message, author, "–ü–æ–ø—ã—Ç–∫–∞ —É–ø–æ–º—è–Ω—É—Ç—å @everyone / @here")
                return
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ –∞–Ω—Ç–∏-@everyone: {e}")

        # === –ê–ù–¢–ò-–°–°–´–õ–ö–ò ===
        try:
            if any(bad in content for bad in ["discord.gg/", "discord.com"]) and not any(allowed in content for allowed in ["tenor.com", "imgur.com"]):
                await handle_violation(message, author, "–û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Å—ã–ª–æ–∫ –∑–∞–ø—Ä–µ—â–µ–Ω–∞")
                return
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ –∞–Ω—Ç–∏-—Å—Å—ã–ª–∫–∏: {e}")

        # === –ê–ù–¢–ò-–ü–ò–ù–ì ===
        try:
            if len(message.mentions) >= MENTION_LIMIT:
                mention_users = [f"{user.display_name}" for user in message.mentions[:3]]
                await handle_violation(message, author, f"–ú–∞—Å—Å–æ–≤–æ–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ ({len(message.mentions)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {', '.join(mention_users)}...)")
                return
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ –∞–Ω—Ç–∏-–ø–∏–Ω–≥: {e}")

        # === –ê–ù–¢–ò-–û–ü–ê–°–ù–´–ï –í–õ–û–ñ–ï–ù–ò–Ø ===
        try:
            dangerous_exts = [".exe", ".bat", ".scr", ".cmd", ".js"]
            for attachment in message.attachments:
                if any(attachment.filename.lower().endswith(ext) for ext in dangerous_exts):
                    await handle_violation(message, author, f"–û–ø–∞—Å–Ω–æ–µ –≤–ª–æ–∂–µ–Ω–∏–µ: {attachment.filename}")
                    return
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ –∞–Ω—Ç–∏-–≤–ª–æ–∂–µ–Ω–∏—è: {e}")


        # === –ê–ù–¢–ò-–°–ü–ê–ú ===
        try:
            now = time.time()
            user_log = user_message_log[author.id]
            user_log.append(now)
            
            # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞–ø–∏—Å–∏
            user_message_log[author.id] = [t for t in user_log if now - t <= SPAM_INTERVAL]

            if len(user_message_log[author.id]) > SPAM_THRESHOLD:
                await handle_violation(message, author, f"–°–ø–∞–º: {len(user_message_log[author.id])} —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞ {SPAM_INTERVAL} —Å–µ–∫")
                user_message_log[author.id] = []  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫
                return
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ –∞–Ω—Ç–∏-—Å–ø–∞–º: {e}")
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø—Ä–∏ –æ—à–∏–±–∫–µ —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è
            try:
                user_message_log[author.id] = []
            except:
                pass

        # === –ê–ù–¢–ò-–ö–ê–ü–° (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞) ===
        try:
            if len(content) > 10:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –¥–ª–∏–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                caps_count = sum(1 for char in message.content if char.isupper())
                caps_ratio = caps_count / len(message.content)
                
                if caps_ratio > 0.7 and caps_count > 15:  # 70% –∑–∞–≥–ª–∞–≤–Ω—ã—Ö –±—É–∫–≤
                    await handle_violation(message, author, f"–ó–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –∑–∞–≥–ª–∞–≤–Ω—ã–º–∏ –±—É–∫–≤–∞–º–∏ ({caps_count} –∏–∑ {len(message.content)})")
                    return
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ –∞–Ω—Ç–∏-–∫–∞–ø—Å: {e}")

        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –µ—Å–ª–∏ –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã
        await bot2.process_commands(message)
        
    except discord.Forbidden:
        logger.warning(f"‚ö†Ô∏è –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç {message.author}")
    except discord.HTTPException as e:
        logger.error(f"‚ùå HTTP –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
    except Exception as e:
        import traceback
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç {message.author}: {e}")
        logger.error(f"–¢—Ä–µ–π—Å–±–µ–∫: {traceback.format_exc()}")
        
        # –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –∫—Ä–∏—Ç–∏—á–µ—Å–∫—É—é –æ—à–∏–±–∫—É –≤ Discord
        try:
            if message.guild:
                log_channel = message.guild.get_channel(LOG_CHANNEL_ID)
                if log_channel:
                    error_embed = discord.Embed(
                        title="üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏",
                        description="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è",
                        color=discord.Color.red()
                    )
                    error_embed.add_field(name="üë§ –ê–≤—Ç–æ—Ä", value=f"{message.author.mention}", inline=True)
                    error_embed.add_field(name="üìç –ö–∞–Ω–∞–ª", value=f"{message.channel.mention}", inline=True)
                    error_embed.add_field(name="üî• –û—à–∏–±–∫–∞", value=f"```{str(e)[:500]}```", inline=False)
                    error_embed.timestamp = discord.utils.utcnow()
                    await log_channel.send(embed=error_embed)
        except Exception as log_error:
            logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –∫—Ä–∏—Ç–∏—á–µ—Å–∫—É—é –æ—à–∏–±–∫—É: {log_error}")

# === –£–õ–£–ß–®–ï–ù–ù–ê–Ø –û–ë–†–ê–ë–û–¢–ö–ê –ù–ê–†–£–®–ï–ù–ò–ô ===
async def handle_violation(message, user, reason):
    """–£–ª—É—á—à–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–π —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
    deletion_success = False
    timeout_success = False
    log_success = False
    
    # –ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
    try:
        await message.delete()
        deletion_success = True
        logger.info(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ: {user} - {reason}")
    except discord.NotFound:
        logger.warning(f"‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ —É–¥–∞–ª–µ–Ω–æ: {user}")
        deletion_success = True  # –°—á–∏—Ç–∞–µ–º —É—Å–ø–µ—Ö–æ–º, —Ç–∞–∫ –∫–∞–∫ —Ü–µ–ª—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞
    except discord.Forbidden:
        logger.error(f"‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: {user}")
    except Exception as e:
        logger.error(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏: {e}")
    
    # –ü–æ–ø—ã—Ç–∫–∞ –≤—ã–¥–∞—Ç—å —Ç–∞–π–º-–∞—É—Ç
    try:
        timeout_success = await timeout_user(user, reason)
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–∞–π–º-–∞—É—Ç–µ: {e}")
    
    # –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞—Ä—É—à–µ–Ω–∏–µ
    try:
        log_success = await log_violation(message.guild, user, reason, message.content, deletion_success, timeout_success)
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
    
    # –ò—Ç–æ–≥–æ–≤–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    logger.info(f"üìä –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞: {user} | –£–¥–∞–ª–µ–Ω–∏–µ: {deletion_success} | –¢–∞–π–º-–∞—É—Ç: {timeout_success} | –õ–æ–≥: {log_success}")
    await apply_strike(user, reason, message.guild)

async def timeout_user(member: discord.Member, reason="–ù–∞—Ä—É—à–µ–Ω–∏–µ", duration=TIMEOUT_DURATION):
    """–£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–¥–∞—á–∏ —Ç–∞–π–º-–∞—É—Ç–∞ —Å –≤–æ–∑–≤—Ä–∞—Ç–æ–º —Å—Ç–∞—Ç—É—Å–∞"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ–º –ª–∏ –º—ã —É–ø—Ä–∞–≤–ª—è—Ç—å —ç—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
        if member.guild_permissions.administrator:
            logger.warning(f"‚ö†Ô∏è –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–º—É—Ç–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {member}")
            return False
            
        if member.top_role >= member.guild.me.top_role:
            logger.warning(f"‚ö†Ô∏è –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã—à–µ —Ä–æ–ª–∏ –±–æ—Ç–∞: {member}")
            return False
        
        until = discord.utils.utcnow() + timedelta(seconds=duration)
        await member.timeout(until, reason=reason)
        logger.info(f"‚è≥ –¢–∞–π–º-–∞—É—Ç –≤—ã–¥–∞–Ω {member}: {reason} (–Ω–∞ {duration//60} –º–∏–Ω)")
        return True
        
    except discord.Forbidden:
        logger.warning(f"‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–¥–∞—á–∏ —Ç–∞–π–º-–∞—É—Ç–∞: {member}")
        return False
    except discord.HTTPException as e:
        logger.error(f"‚ùå HTTP –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–∞–π–º-–∞—É—Ç–µ: {e}")
        return False
    except Exception as e:
        logger.error(f"‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–∞–π–º-–∞—É—Ç–µ: {e}")
        return False

async def log_violation(guild, user, reason, msg_content="", deletion_success=True, timeout_success=True):
    try:
        channel = bot2.get_channel(LOG_CHANNEL_ID)
        if not channel or (guild and channel.guild.id != guild.id):
            logger.warning("–õ–æ–≥-–∫–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å–µ—Ä–≤–µ—Ä—É.")
            return False

        embed = discord.Embed(title="–ù–∞—Ä—É—à–µ–Ω–∏–µ", color=0xff0000)
        embed.add_field(name="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", value=str(user), inline=True)
        embed.add_field(name="–ü—Ä–∏—á–∏–Ω–∞", value=reason, inline=True)

        status = "–£–¥–∞–ª–µ–Ω–∏–µ: " + ("‚úÖ" if deletion_success else "‚ùå") + " | –¢–∞–π–º-–∞—É—Ç: " + ("‚úÖ" if timeout_success else "‚ùå")
        embed.add_field(name="–°—Ç–∞—Ç—É—Å", value=status, inline=True)

        if msg_content.strip():
            embed.add_field(name="–°–æ–æ–±—â–µ–Ω–∏–µ", value=msg_content[:1000], inline=False)

        embed.set_footer(text="–ú–æ–¥–µ—Ä–∞—Ü–∏—è: " + guild.name)

        await channel.send(embed=embed)
        logger.info("–ó–∞–ª–æ–≥–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –æ—Ç " + str(user))
        return True

    except Exception as e:
        logger.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–∏: " + str(e))
        return False
            
        # –°–æ–∑–¥–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–π embed
        embed = discord.Embed(title="üö® –ù–∞—Ä—É—à–µ–Ω–∏–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ", color=0xff0000)
        embed.add_field(name="üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", value=f"{user.mention}\n`{user}` (ID: {user.id})", inline=True)
        embed.add_field(name="üö® –ü—Ä–∏—á–∏–Ω–∞", value=f"```{reason}```", inline=True)
        embed.add_field(name="üìä –°—Ç–∞—Ç—É—Å –¥–µ–π—Å—Ç–≤–∏–π", 
                       value=f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ: {'‚úÖ' if deletion_success else '‚ùå'}\n"
                             f"‚è≥ –¢–∞–π–º-–∞—É—Ç: {'‚úÖ' if timeout_success else '‚ùå'}", 
                       inline=True)
        
        if msg_content and len(msg_content.strip()) > 0:
            # –û–±—Ä–µ–∑–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –µ—Å–ª–∏ –æ–Ω–æ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ
            content_preview = msg_content[:800] + "..." if len(msg_content) > 800 else msg_content
            embed.add_field(name="üìù –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏—è", value=f"```{content_preview}```", inline=False)
        
        embed.set_thumbnail(url=user.display_avatar.url)
        embed.set_footer(text=f"–°–∏—Å—Ç–µ–º–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ ‚Ä¢ {guild.name}")
        embed.timestamp = discord.utils.utcnow()
        
        await channel.send(embed=embed)
        logger.info(f"üìù –ù–∞—Ä—É—à–µ–Ω–∏–µ –∑–∞–ª–æ–≥–∏—Ä–æ–≤–∞–Ω–æ: {user}")
        return True
        
    except discord.Forbidden:
        logger.error(f"‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –ª–æ–≥-–∫–∞–Ω–∞–ª")
        return False
    except discord.HTTPException as e:
        logger.error(f"‚ùå HTTP –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        return False
    except Exception as e:
        logger.error(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        return False

# === –ö–û–ú–ê–ù–î–´ –ú–û–î–ï–†–ê–¶–ò–ò ===

@bot2.command()
@commands.has_permissions(moderate_members=True)
async def timeout(ctx, member: discord.Member, minutes: int = 30, *, reason="–ë–µ–∑ –ø—Ä–∏—á–∏–Ω—ã"):
    """–í—ã–¥–∞—Ç—å —Ç–∞–π–º-–∞—É—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
    try:
        duration = minutes * 60
        await timeout_user(member, reason, duration)
        await ctx.send(f"‚è≥ {member.mention} –ø–æ–ª—É—á–∏–ª —Ç–∞–π–º-–∞—É—Ç –Ω–∞ {minutes} –º–∏–Ω—É—Ç. –ü—Ä–∏—á–∏–Ω–∞: {reason}")
        await log_violation(ctx.guild, member, f"–ö–æ–º–∞–Ω–¥–Ω—ã–π —Ç–∞–π–º-–∞—É—Ç: {reason}")
    except Exception as e:
        await ctx.send(f"‚ùå –û—à–∏–±–∫–∞: {e}")

@bot2.command()
@commands.has_permissions(moderate_members=True)
async def untimeout(ctx, member: discord.Member):
    """–°–Ω—è—Ç—å —Ç–∞–π–º-–∞—É—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        await member.timeout(None)
        await ctx.send(f"‚úÖ –¢–∞–π–º-–∞—É—Ç —Å–Ω—è—Ç —Å {member.mention}")
    except Exception as e:
        await ctx.send(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–Ω—è—Ç–∏–∏ —Ç–∞–π–º-–∞—É—Ç–∞: {e}")

@bot2.command()
@commands.has_permissions(manage_messages=True)
async def clear(ctx, amount: int = 10):
    """–û—á–∏—Å—Ç–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ"""
    try:
        deleted = await ctx.channel.purge(limit=amount + 1)  # +1 —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—É
        await ctx.send(f"üßπ –£–¥–∞–ª–µ–Ω–æ {len(deleted) - 1} —Å–æ–æ–±—â–µ–Ω–∏–π.", delete_after=5)
    except Exception as e:
        await ctx.send(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ: {e}")

@bot2.command()
@commands.has_permissions(moderate_members=True)
async def warn(ctx, member: discord.Member, *, reason="–ë–µ–∑ –ø—Ä–∏—á–∏–Ω—ã"):
    """–í—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ"""
    try:
        await ctx.send(f"‚ö†Ô∏è {member.mention} –ø–æ–ª—É—á–∏–ª –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ü—Ä–∏—á–∏–Ω–∞: {reason}")
        await log_violation(ctx.guild, member, f"–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: {reason}")
    except Exception as e:
        await ctx.send(f"‚ùå –û—à–∏–±–∫–∞: {e}")

@bot2.command()
@commands.has_permissions(administrator=True)
async def status(ctx):
    """–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏"""
    try:
        # –ü–æ–¥—Å—á–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Å–ø–∞–º-–ª–æ–≥–µ
        active_users = len([user_id for user_id, timestamps in user_message_log.items() if timestamps])
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥-–∫–∞–Ω–∞–ª–∞
        log_channel = ctx.guild.get_channel(LOG_CHANNEL_ID)
        log_status = "‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω" if log_channel else "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω"
        
        embed = discord.Embed(
            title="ü§ñ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã –º–æ–¥–µ—Ä–∞—Ü–∏–∏",
            description="–î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞",
            color=discord.Color.green()
        )
        embed.add_field(name="üìä –°–æ—Å—Ç–æ—è–Ω–∏–µ", value="‚úÖ –û–Ω–ª–∞–π–Ω", inline=True)
        embed.add_field(name="üèì –ü–∏–Ω–≥", value=f"`{round(bot2.latency * 1000)}ms`", inline=True)
        embed.add_field(name="üîó –°–µ—Ä–≤–µ—Ä—ã", value=f"`{len(bot2.guilds)}`", inline=True)
        
        embed.add_field(name="üìù –õ–æ–≥-–∫–∞–Ω–∞–ª", value=log_status, inline=True)
        embed.add_field(name="üë• –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", value=f"`{active_users}`", inline=True)
        embed.add_field(name="‚öôÔ∏è –ú–æ–¥—É–ª–∏", value="‚úÖ –í—Å–µ –∞–∫—Ç–∏–≤–Ω—ã", inline=True)
        
        embed.add_field(name="üõ°Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞—â–∏—Ç—ã", 
                       value=f"‚Ä¢ –õ–∏–º–∏—Ç —É–ø–æ–º–∏–Ω–∞–Ω–∏–π: `{MENTION_LIMIT}`\n"
                             f"‚Ä¢ –ü–æ—Ä–æ–≥ —Å–ø–∞–º–∞: `{SPAM_THRESHOLD} –∑–∞ {SPAM_INTERVAL}—Å`\n"
                             f"‚Ä¢ –¢–∞–π–º-–∞—É—Ç: `{TIMEOUT_DURATION//60} –º–∏–Ω—É—Ç`", 
                       inline=False)
        
        embed.set_footer(text=f"–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω ‚Ä¢ ID: {bot2.user.id}")
        embed.timestamp = discord.utils.utcnow()
        
        await ctx.send(embed=embed)
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ status: {e}")
        await ctx.send("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã")

@bot2.command()
@commands.has_permissions(moderate_members=True)
async def antispam_stats(ctx):
    """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–Ω—Ç–∏-—Å–ø–∞–º —Å–∏—Å—Ç–µ–º—ã"""
    try:
        if not user_message_log:
            await ctx.send("üìä –ê–Ω—Ç–∏-—Å–ø–∞–º –ª–æ–≥ –ø—É—Å—Ç")
            return
            
        total_tracked = len(user_message_log)
        active_now = len([uid for uid, msgs in user_message_log.items() if msgs])
        
        embed = discord.Embed(
            title="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–Ω—Ç–∏-—Å–ø–∞–º —Å–∏—Å—Ç–µ–º—ã",
            color=discord.Color.blue()
        )
        embed.add_field(name="üë• –í—Å–µ–≥–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è", value=f"`{total_tracked}`", inline=True)
        embed.add_field(name="üî• –ê–∫—Ç–∏–≤–Ω—ã —Å–µ–π—á–∞—Å", value=f"`{active_now}`", inline=True)
        embed.add_field(name="‚öôÔ∏è –ò–Ω—Ç–µ—Ä–≤–∞–ª", value=f"`{SPAM_INTERVAL}—Å`", inline=True)
        
        # –¢–æ–ø —Å–∞–º—ã—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 5)
        if active_now > 0:
            top_users = sorted(
                [(uid, len(msgs)) for uid, msgs in user_message_log.items() if msgs],
                key=lambda x: x[1], reverse=True
            )[:5]
            
            top_text = ""
            for uid, count in top_users:
                try:
                    user = ctx.guild.get_member(uid)
                    name = user.display_name if user else f"ID:{uid}"
                    top_text += f"‚Ä¢ {name}: `{count}` —Å–æ–æ–±—â–µ–Ω–∏–π\n"
                except:
                    top_text += f"‚Ä¢ ID:{uid}: `{count}` —Å–æ–æ–±—â–µ–Ω–∏–π\n"
                    
            embed.add_field(name="üî• –°–∞–º—ã–µ –∞–∫—Ç–∏–≤–Ω—ã–µ", value=top_text or "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö", inline=False)
        
        await ctx.send(embed=embed)
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ antispam_stats: {e}")
        await ctx.send("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")

@bot2.command()
@commands.has_permissions(administrator=True)
async def clear_spam_log(ctx):
    """–û—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥ –∞–Ω—Ç–∏-—Å–ø–∞–º —Å–∏—Å—Ç–µ–º—ã"""
    try:
        old_count = len(user_message_log)
        user_message_log.clear()
        await ctx.send(f"üßπ –õ–æ–≥ –∞–Ω—Ç–∏-—Å–ø–∞–º –æ—á–∏—â–µ–Ω! –£–¥–∞–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: `{old_count}`")
        logger.info(f"–õ–æ–≥ –∞–Ω—Ç–∏-—Å–ø–∞–º –æ—á–∏—â–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º {ctx.author}")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –ª–æ–≥–∞: {e}")
        await ctx.send("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –ª–æ–≥–∞")

# === –§–£–ù–ö–¶–ò–Ø –ó–ê–ü–£–°–ö–ê –° –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ú –ü–ï–†–ï–ó–ê–ü–£–°–ö–û–ú ===
async def run_bot1_with_restart(bot1, token, name):
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö"""
    while True:
        try:
            logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ {name}...")
            await bot1.start(token)
        except discord.LoginFailure:
            logger.error(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –¥–ª—è {name}")
            break
        except Exception as e:
            logger.error(f"‚ùå {name} —É–ø–∞–ª —Å –æ—à–∏–±–∫–æ–π: {e}")
            logger.info(f"üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ {name} —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...")
            await asyncio.sleep(5)
        finally:
            if not bot1.is_closed():
                await bot1.close()

# === –ó–ê–ü–£–°–ö –û–ë–û–ò–• –ë–û–¢–û–í ===

@bot2.event
async def on_member_join(member):
    role = discord.utils.get(member.guild.roles, name="unverify")
    if role:
        await member.add_roles(role)
        logger.info(f"‚úÖ –í—ã–¥–∞–Ω–∞ —Ä–æ–ª—å 'unverify' –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {member}")


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞"""
    try:
        async with asyncio.TaskGroup() as tg:
            tg.create_task(run_bot1_with_restart(
                bot1, 
                "MTM3Njg3NjM5Mjc2MzEwMTI5Ng.GeBnqx.JlvnY-fv2sbjxoPAlyrYJkX6jNW2n5VTER908k",
                "–ë–æ—Ç –∑–∞—è–≤–æ–∫"
            ))
            tg.create_task(run_bot1_with_restart(
                bot2, 
                "MTM3Njg1ODQxMTk0MTEwNTY5NA.GOXnKn.OZ1O8z4vvc4UD6FB23bIr1V81qyjNbgnCDdyFc",
                "–ë–æ—Ç –º–æ–¥–µ—Ä–∞—Ü–∏–∏"
            ))
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        logger.info("–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥...")
        await asyncio.sleep(10)
        await main()

if __name__ == "__main__":
    logger.info("üéØ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –±–æ—Ç–æ–≤...")
    asyncio.run(main())





import random

verification_codes = {}


class VerificationModal(ui.Modal, title="–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è"):
    code_input = ui.TextInput(label="–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ", placeholder="–ü—Ä–∏–º–µ—Ä: 1234")

    async def on_submit(self, interaction: discord.Interaction):
        expected_code = verification_codes.get(interaction.user.id)
        try:
            if expected_code and self.code_input.value.strip() == str(expected_code):
                del verification_codes[interaction.user.id]
                role = discord.utils.get(interaction.guild.roles, name="User")
                if role:
                    await interaction.user.add_roles(role)
                    # –£–¥–∞–ª–∏–º —Ä–æ–ª—å 'unverify' –µ—Å–ª–∏ –µ—Å—Ç—å
                    unverify_role = discord.utils.get(interaction.guild.roles, name="unverify")
                    if unverify_role in interaction.user.roles:
                        await interaction.user.remove_roles(unverify_role)
                    await interaction.response.send_message("‚úÖ –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!", ephemeral=True)
                else:
                    await interaction.response.send_message("‚ö†Ô∏è –†–æ–ª—å 'User' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", ephemeral=True)
            else:
                await interaction.response.send_message("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.", ephemeral=True)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏: {e}")
            await interaction.response.send_message("‚ùå –û—à–∏–±–∫–∞ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ —Å–µ—Ä–≤–µ—Ä–∞.", ephemeral=True)




@bot2.command()
@commands.has_permissions(administrator=True)
async def testlog(ctx):
    """–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è"""
    fake_user = ctx.author
    fake_reason = "–¢–µ—Å—Ç –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è"
    fake_msg = "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥-–∫–∞–Ω–∞–ª–∞."
    result = await log_violation(ctx.guild, fake_user, fake_reason, fake_msg)
    if result:
        await ctx.send("‚úÖ –õ–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.")
    else:
        await ctx.send("‚ùå –õ–æ–≥ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.")

@bot2.command()
@commands.has_permissions(administrator=True)
async def status(ctx):
    try:
        channel = bot2.get_channel(LOG_CHANNEL_ID)
        if not channel:
            await ctx.send("‚ùå –õ–æ–≥-–∫–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return

        perms = channel.permissions_for(ctx.guild.me)
        embed = discord.Embed(title="üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã", color=0x00ff00)
        embed.add_field(name="–õ–æ–≥-–∫–∞–Ω–∞–ª", value=f"{channel.mention}", inline=False)
        embed.add_field(name="–ü—Ä–∞–≤–∞", value=f"Embed Links: {'‚úÖ' if perms.embed_links else '‚ùå'}\nSend Messages: {'‚úÖ' if perms.send_messages else '‚ùå'}", inline=False)
        await ctx.send(embed=embed)
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ status: {e}")
        await ctx.send("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞.")
